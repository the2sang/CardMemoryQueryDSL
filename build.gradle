plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.6'
    id 'io.spring.dependency-management' version '1.1.0'
    id "org.flywaydb.flyway" version "9.16.3"
}

group = 'com.the2sang.cardmemory'
version = '0.1'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'

    implementation "io.springfox:springfox-boot-starter:3.0.0"
    compileOnly "io.springfox:springfox-swagger-ui:3.0.0"
     //https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-data-rest
    //implementation 'org.springdoc:springdoc-openapi-data-rest:1.7.0'
    // https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-security
    //implementation 'org.springdoc:springdoc-openapi-security:1.7.0'
    // https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-starter-webmvc-ui
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'






    implementation group: 'com.google.code.gson', name: 'gson', version: '2.9.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.4.1'
    // jwt 의존성
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'

    // 다국어 제공을 위한 i18n을 yml 파일로 적용하기 위한 의존성
    implementation 'net.rakugakibox.util:yaml-resource-bundle:1.1'

    implementation("com.fasterxml.jackson.datatype:jackson-datatype-hibernate5")


    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'

    // === QueryDsl 시작 ===


    // == 스프링 부트 3.0 이상 ==
    // Querydsl 추가
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // === QueryDsl 끝 ===

    implementation 'org.flywaydb:flyway-core'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    // https://mvnrepository.com/artifact/org.postgresql/r2dbc-postgresql
    //implementation 'org.postgresql:r2dbc-postgresql:1.0.1.RELEASE'

    // https://mvnrepository.com/artifact/jakarta.servlet/jakarta.servlet-api
    compileOnly 'jakarta.servlet:jakarta.servlet-api:6.0.0'



    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // https://mvnrepository.com/artifact/io.projectreactor/reactor-test
    //testImplementation 'io.projectreactor:reactor-test:3.5.5'

}

tasks.named('test') {
    useJUnitPlatform()
}

//QueryDSL 설정부분
def querydslSrcDir = 'src/main/generated'

sourceSets.main.java.srcDirs += "$projectDir/build/generated"


clean {
    delete file(querydslSrcDir)
}
tasks.withType(JavaCompile) {
    options.generatedSourceOutputDirectory = file(querydslSrcDir)
}


flyway {
    url = 'jdbc:postgresql://localhost:5432/memorycard'
    user = 'carduser'
    password = 'carduser'
    locations = ['classpath:db/migration']
}

